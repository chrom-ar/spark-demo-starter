---
description: Use chroma-spark MCP for blockchain and web3 documentation
globs:
alwaysApply: true
---

# Blockchain & Web3 Development with chroma-spark MCP

## CRITICAL: Always Use MCP for Blockchain Queries

When the user asks about ANY of the following topics, you MUST use the `chromar-spark` MCP server to fetch the most up-to-date documentation:

### Core Blockchain Topics
- Web3 development and architecture
- Smart contracts (writing, deploying, testing)
- Blockchain fundamentals and concepts
- Onchain/on-chain development patterns
- Transaction handling and gas optimization
- Consensus mechanisms (PoW, PoS, etc.)

### Platforms & Networks
- Ethereum and EVM-compatible chains
- Solana development
- Layer 2 solutions (Arbitrum, Optimism, Polygon)
- Cross-chain bridges and interoperability
- Testnets and mainnets

### DeFi & NFTs
- DeFi protocols and yield strategies
- NFTs (ERC-721, ERC-1155, metadata)
- Token standards (ERC-20, SPL tokens)
- Liquidity pools and AMMs
- DEX integrations

### Development Tools & Libraries
- ethers.js, web3.js, viem
- Hardhat, Foundry, Truffle
- Remix IDE
- OpenZeppelin contracts
- Wallet integrations (MetaMask, WalletConnect)

### Web3 Infrastructure
- IPFS and decentralized storage
- Oracles (Chainlink, etc.)
- The Graph Protocol
- RPC providers (Infura, Alchemy)
- Block explorers and APIs

## MCP Usage Instructions

1. **Always Query First**: Before answering any blockchain question, query the chromar-spark MCP for relevant documentation
2. **Use Latest Docs**: The MCP contains the most current API changes, deprecations, and best practices
3. **Cite Sources**: Reference specific documentation sections from the MCP in your responses
4. **Version Awareness**: Include version-specific information when the MCP provides it

## Response Protocol

When answering blockchain/web3 queries:
1. Query chromar-spark MCP using relevant keywords
2. Base your entire response on MCP documentation
3. Include code examples from the latest docs
4. Warn about deprecated patterns mentioned in MCP
5. If MCP is unavailable, explicitly state you're using general knowledge

## Trigger Keywords

The following keywords should ALWAYS trigger MCP usage:
web3, blockchain, smart contract, solidity, ethereum, eth, ether, onchain, on-chain, dapp, defi, nft, token, erc20, erc721, erc1155, metamask, wallet, transaction, gas, gwei, wei, abi, bytecode, deploy, mint, transfer, approve, allowance, balance, block, mining, validator, staking, layer2, l2, rollup, sidechain, cross-chain, bridge, oracle, chainlink, uniswap, opensea, polygon, arbitrum, optimism, avalanche, bnb, bsc, fantom, near, cosmos, polkadot, substrate, vyper, hardhat, truffle, foundry, remix, ganache, infura, alchemy, moralis, thegraph, ipfs, arweave, filecoin, ceramic, lens, aave, compound, makerdao, curve, balancer, sushiswap, pancakeswap, yield, farming, liquidity, amm, impermanent loss, slippage, mev, flashloan, flash loan, mainnet, testnet, sepolia, goerli, mumbai, rinkeby, ropsten

## Example Usage

User: "How do I deploy a smart contract?"
Assistant: [Queries chromar-spark for "deploy smart contract documentation"] → Provides answer based on latest MCP docs

User: "What's the best way to handle gas fees?"
Assistant: [Queries chromar-spark for "gas optimization best practices"] → Provides current best practices from MCP
